{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5","program":"/home/hustccc/.rustup/toolchains/nightly-2020-06-27-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","linked_list_allocator","/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","panic=abort","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"spinning_top\"","--cfg","feature=\"use_spin\"","-C","metadata=133ab6b0d1d04bd8","-C","extra-filename=-133ab6b0d1d04bd8","--out-dir","/home/hustccc/zCore-riscv/os/target/rls/riscv64imac-unknown-none-elf/debug/deps","--target","riscv64imac-unknown-none-elf","-L","dependency=/home/hustccc/zCore-riscv/os/target/rls/riscv64imac-unknown-none-elf/debug/deps","-L","dependency=/home/hustccc/zCore-riscv/os/target/rls/debug/deps","--extern","spinning_top=/home/hustccc/zCore-riscv/os/target/rls/riscv64imac-unknown-none-elf/debug/deps/libspinning_top-82a83ec88e542954.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hustccc/.rustup/toolchains/nightly-2020-06-27-x86_64-unknown-linux-gnu"],"output":"/home/hustccc/zCore-riscv/os/target/rls/riscv64imac-unknown-none-elf/debug/deps/liblinked_list_allocator-133ab6b0d1d04bd8.rmeta"},"prelude":{"crate_id":{"name":"linked_list_allocator","disambiguator":[18129555674241252164,14760268101431687037]},"crate_root":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src","external_crates":[{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11664419765657533531,8460344961036156071]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[692475293806162283,16637895737923782504]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6641927447179849527,4609170559316725173]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":4,"id":{"name":"spinning_top","disambiguator":[4116561422085563824,12762224779993920476]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":5,"id":{"name":"lock_api","disambiguator":[1769387943683700570,3472673941612783954]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":6,"id":{"name":"scopeguard","disambiguator":[3705049167439064054,2365332533505729311]}},{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","num":7,"id":{"name":"alloc","disambiguator":[4693264404719495008,542386644207542885]}}],"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":0,"byte_end":7765,"line_start":1,"line_end":247,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":0,"byte_end":7765,"line_start":1,"line_end":247,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":47},{"krate":0,"index":52},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"feature(const_fn)","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"no_std","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":142,"byte_end":152,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":722,"byte_end":726,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Heap","qualname":"::Heap","value":"Heap {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" A fixed size heap backed by a linked list of free memory blocks.\n","sig":null,"attributes":[{"value":"/ A fixed size heap backed by a linked list of free memory blocks.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":642,"byte_end":710,"line_start":34,"line_end":34,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":905,"byte_end":910,"line_start":44,"line_end":44,"column_start":18,"column_end":23},"name":"empty","qualname":"<Heap>::empty","value":"pub const fn empty() -> Heap","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty heap. All allocate calls will return `None`.\n","sig":null,"attributes":[{"value":"/ Creates an empty heap. All allocate calls will return `None`.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":822,"byte_end":887,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1243,"byte_end":1247,"line_start":59,"line_end":59,"column_start":19,"column_end":23},"name":"init","qualname":"<Heap>::init","value":"pub unsafe fn init(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty heap","sig":null,"attributes":[{"value":"/ Initializes an empty heap","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1062,"byte_end":1091,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1104,"byte_end":1118,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1123,"byte_end":1126,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function must be called at most once and must only be used on an","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1131,"byte_end":1204,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ empty heap.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1209,"byte_end":1224,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":70,"line_end":70,"column_start":19,"column_end":22},"name":"new","qualname":"<Heap>::new","value":"pub unsafe fn new(usize, usize) -> Heap","parent":null,"children":[],"decl_id":null,"docs":" Creates a new heap with the given `bottom` and `size`. The bottom address must be valid\n and the memory in the `[heap_bottom, heap_bottom + heap_size)` range must not be used for\n anything else. This function is unsafe because it can cause undefined behavior if the\n given address is invalid.\n","sig":null,"attributes":[{"value":"/ Creates a new heap with the given `bottom` and `size`. The bottom address must be valid","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1459,"byte_end":1550,"line_start":66,"line_end":66,"column_start":5,"column_end":96}},{"value":"/ and the memory in the `[heap_bottom, heap_bottom + heap_size)` range must not be used for","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1555,"byte_end":1648,"line_start":67,"line_end":67,"column_start":5,"column_end":98}},{"value":"/ anything else. This function is unsafe because it can cause undefined behavior if the","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1653,"byte_end":1742,"line_start":68,"line_end":68,"column_start":5,"column_end":94}},{"value":"/ given address is invalid.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":1747,"byte_end":1776,"line_start":69,"line_end":69,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3040,"byte_end":3058,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"allocate_first_fit","qualname":"<Heap>::allocate_first_fit","value":"pub fn allocate_first_fit(&mut Self, Layout) -> Result<NonNull<u8>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a chunk of the given size with the given alignment. Returns a pointer to the\n beginning of that chunk if it was successful. Else it returns `None`.\n This function scans the list of free memory blocks and uses the first block that is big\n enough. The runtime is in O(n) where n is the number of free blocks, but it should be\n reasonably fast for small allocations.\n","sig":null,"attributes":[{"value":"/ Allocates a chunk of the given size with the given alignment. Returns a pointer to the","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":2623,"byte_end":2713,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ beginning of that chunk if it was successful. Else it returns `None`.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":2718,"byte_end":2791,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ This function scans the list of free memory blocks and uses the first block that is big","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":2796,"byte_end":2887,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/ enough. The runtime is in O(n) where n is the number of free blocks, but it should be","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":2892,"byte_end":2981,"line_start":99,"line_end":99,"column_start":5,"column_end":94}},{"value":"/ reasonably fast for small allocations.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":2986,"byte_end":3028,"line_start":100,"line_end":100,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3896,"byte_end":3906,"line_start":117,"line_end":117,"column_start":19,"column_end":29},"name":"deallocate","qualname":"<Heap>::deallocate","value":"pub unsafe fn deallocate(&mut Self, NonNull<u8>, Layout)","parent":null,"children":[],"decl_id":null,"docs":" Frees the given allocation. `ptr` must be a pointer returned\n by a call to the `allocate_first_fit` function with identical size and alignment. Undefined\n behavior may occur for invalid arguments, thus this function is unsafe.","sig":null,"attributes":[{"value":"/ Frees the given allocation. `ptr` must be a pointer returned","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3343,"byte_end":3407,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ by a call to the `allocate_first_fit` function with identical size and alignment. Undefined","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3412,"byte_end":3507,"line_start":111,"line_end":111,"column_start":5,"column_end":100}},{"value":"/ behavior may occur for invalid arguments, thus this function is unsafe.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3512,"byte_end":3587,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3592,"byte_end":3595,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This function walks the list of free memory blocks and inserts the freed block at the","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3600,"byte_end":3689,"line_start":114,"line_end":114,"column_start":5,"column_end":94}},{"value":"/ correct place. If the freed block is adjacent to another free block, the blocks are merged","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3694,"byte_end":3788,"line_start":115,"line_end":115,"column_start":5,"column_end":99}},{"value":"/ again. This operation is in `O(n)` since the list needs to be sorted by address.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":3793,"byte_end":3877,"line_start":116,"line_end":116,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4173,"byte_end":4179,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Heap>::bottom","value":"pub fn bottom(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom address of the heap.\n","sig":null,"attributes":[{"value":"/ Returns the bottom address of the heap.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4118,"byte_end":4161,"line_start":123,"line_end":123,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4274,"byte_end":4278,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"size","qualname":"<Heap>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the heap.\n","sig":null,"attributes":[{"value":"/ Returns the size of the heap.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4229,"byte_end":4262,"line_start":128,"line_end":128,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4376,"byte_end":4379,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"top","qualname":"<Heap>::top","value":"pub fn top(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the top address of the heap\n","sig":null,"attributes":[{"value":"/ Return the top address of the heap","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4326,"byte_end":4364,"line_start":133,"line_end":133,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4502,"byte_end":4506,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"used","qualname":"<Heap>::used","value":"pub fn used(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the used part of the heap\n","sig":null,"attributes":[{"value":"/ Returns the size of the used part of the heap","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4441,"byte_end":4490,"line_start":138,"line_end":138,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4615,"byte_end":4619,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"free","qualname":"<Heap>::free","value":"pub fn free(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the free part of the heap\n","sig":null,"attributes":[{"value":"/ Returns the size of the free part of the heap","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4554,"byte_end":4603,"line_start":143,"line_end":143,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4843,"byte_end":4849,"line_start":153,"line_end":153,"column_start":19,"column_end":25},"name":"extend","qualname":"<Heap>::extend","value":"pub unsafe fn extend(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Extends the size of the heap by creating a new hole at the end","sig":null,"attributes":[{"value":"/ Extends the size of the heap by creating a new hole at the end","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4679,"byte_end":4745,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4750,"byte_end":4753,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4758,"byte_end":4772,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4777,"byte_end":4780,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The new extended area must be valid","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":4785,"byte_end":4824,"line_start":152,"line_end":152,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5732,"byte_end":5742,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"LockedHeap","qualname":"::LockedHeap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"use_spin\")","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5692,"byte_end":5720,"line_start":181,"line_end":181,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5895,"byte_end":5900,"line_start":187,"line_end":187,"column_start":18,"column_end":23},"name":"empty","qualname":"<LockedHeap>::empty","value":"pub const fn empty() -> LockedHeap","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty heap. All allocate calls will return `None`.\n","sig":null,"attributes":[{"value":"/ Creates an empty heap. All allocate calls will return `None`.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5812,"byte_end":5877,"line_start":186,"line_end":186,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6315,"byte_end":6318,"line_start":195,"line_end":195,"column_start":19,"column_end":22},"name":"new","qualname":"<LockedHeap>::new","value":"pub unsafe fn new(usize, usize) -> LockedHeap","parent":null,"children":[],"decl_id":null,"docs":" Creates a new heap with the given `bottom` and `size`. The bottom address must be valid\n and the memory in the `[heap_bottom, heap_bottom + heap_size)` range must not be used for\n anything else. This function is unsafe because it can cause undefined behavior if the\n given address is invalid.\n","sig":null,"attributes":[{"value":"/ Creates a new heap with the given `bottom` and `size`. The bottom address must be valid","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5979,"byte_end":6070,"line_start":191,"line_end":191,"column_start":5,"column_end":96}},{"value":"/ and the memory in the `[heap_bottom, heap_bottom + heap_size)` range must not be used for","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6075,"byte_end":6168,"line_start":192,"line_end":192,"column_start":5,"column_end":98}},{"value":"/ anything else. This function is unsafe because it can cause undefined behavior if the","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6173,"byte_end":6262,"line_start":193,"line_end":193,"column_start":5,"column_end":94}},{"value":"/ given address is invalid.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6267,"byte_end":6296,"line_start":194,"line_end":194,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7326,"byte_end":7336,"line_start":233,"line_end":233,"column_start":8,"column_end":18},"name":"align_down","qualname":"::align_down","value":"pub fn align_down(usize, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Align downwards. Returns the greatest x with alignment `align`\n so that x <= addr. The alignment must be a power of 2.\n","sig":null,"attributes":[{"value":"/ Align downwards. Returns the greatest x with alignment `align`","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7193,"byte_end":7259,"line_start":231,"line_end":231,"column_start":1,"column_end":67}},{"value":"/ so that x <= addr. The alignment must be a power of 2.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7260,"byte_end":7318,"line_start":232,"line_end":232,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7677,"byte_end":7685,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"align_up","qualname":"::align_up","value":"pub fn align_up(usize, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Align upwards. Returns the smallest x with alignment `align`\n so that x >= addr. The alignment must be a power of 2.\n","sig":null,"attributes":[{"value":"/ Align upwards. Returns the smallest x with alignment `align`","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7546,"byte_end":7610,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/ so that x >= addr. The alignment must be a power of 2.","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":7611,"byte_end":7669,"line_start":244,"line_end":244,"column_start":1,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/hole.rs","byte_start":8009,"byte_end":8017,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/hole.rs","byte_start":11607,"byte_end":11611,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":811,"byte_end":815,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5795,"byte_end":5805,"line_start":185,"line_end":185,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6619,"byte_end":6629,"line_start":206,"line_end":206,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6790,"byte_end":6800,"line_start":215,"line_end":215,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/hole.rs","byte_start":8009,"byte_end":8017,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/hole.rs","byte_start":11607,"byte_end":11611,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":811,"byte_end":815,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":5795,"byte_end":5805,"line_start":185,"line_end":185,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6619,"byte_end":6629,"line_start":206,"line_end":206,"column_start":16,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":2093}},{"span":{"file_name":"/home/hustccc/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/linked_list_allocator-0.8.5/src/lib.rs","byte_start":6790,"byte_end":6800,"line_start":215,"line_end":215,"column_start":29,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":8500}}]}